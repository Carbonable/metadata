use metadata::metadata::common::utils::ArrayConcat;
use metadata::metadata::slots::template::token::data::TemplateData;


fn generate(data: @TemplateData) -> Span<felt252> {
    let mut svg: Array<felt252> = Default::default();
    print_head_sft_template(ref svg, data);
    svg.span()
}

type Data = TemplateData;

// Generated by SVGenerator

#[inline(always)]
fn print_card_row(ref svg: Array<felt252>, data: @Data) {
    svg.append('<g id=\\"card_row\\" letter-spa');
    svg.append('cing=\\"0em\\"> <text fill=\\"#');
    svg.append('D0D1D6\\" fill-opacity=\\"0.8\\');
    svg.append('" font-size=\\"11\\" font-weigh');
    svg.append('t=\\"500\\"> <tspan x=\\"28\\"');
    svg.append(' y=\\"252.5\\">Carbon units</ts');
    svg.append('pan> </text> <text fill=\\"#EBE');
    svg.append('CF0\\" font-size=\\"14\\" font-');
    svg.append('weight=\\"bold\\"> <tspan x=\\"');
    svg.append('28\\" y=\\"272.091\\">');
    svg.concat(*data.asset_capacity);
    svg.append('</tspan> </text> <text fill=\\"');
    svg.append('#D0D1D6\\" fill-opacity=\\"0.8');
    svg.append('\\" font-size=\\"11\\" font-wei');
    svg.append('ght=\\"500\\"> <tspan x=\\"117.');
    svg.append('5\\" y=\\"252.5\\">Ends in</tsp');
    svg.append('an> </text> <text fill=\\"#EBEC');
    svg.append('F0\\" font-size=\\"14\\" font-w');
    svg.append('eight=\\"bold\\"> <tspan x=\\"1');
    svg.append('17.5\\" y=\\"272.1\\" dynamic=');
    svg.append('\\"var_name\\">');
    svg.concat(*data.end_year);
    svg.append('</tspan> </text> </g>');
}
#[inline(always)]
fn print_card_progress(ref svg: Array<felt252>, data: @Data) {
    svg.append('<g id=\\"card_progress\\"> <tex');
    svg.append('t fill=\\"#EFECEA\\" font-size=');
    svg.append('\\"14\\" font-weight=\\"600\\"');
    svg.append(' letter-spacing=\\"0em\\"> <tsp');
    svg.append('an x=\\"287\\" y=\\"256.1\\" te');
    svg.append('xt-anchor=\\"end\\">');
    svg.concat(*data.progress);
    svg.append('%</tspan> </text> ');
    svg.concat(*data.progress_bar_component);
    svg.append(' </g>');
}

#[inline(always)]
fn print_head_card_content(ref svg: Array<felt252>, data: @Data) {
    svg.append('<g id=\\"card_content\\"> <rect');
    svg.append(' x=\\"12\\" y=\\"231\\" width=');
    svg.append('\\"292\\" height=\\"55\\" rx=\\');
    svg.append('"8\\" fill=\\"#0D0D0D\\" fill-o');
    svg.append('pacity=\\"0.7\\" /> ');
    print_card_row(ref svg, data);
    svg.append(' ');
    print_card_progress(ref svg, data);
    svg.append(' <rect x=\\"12.5\\" y=\\"231.5');
    svg.append('\\" width=\\"291\\" height=\\"5');
    svg.append('4\\" rx=\\"7.5\\" stroke=\\"#D0');
    svg.append('D1D6\\" stroke-opacity=\\"0.1\\');
    svg.append('" /> </g>');
}

#[inline(always)]
fn print_surface_details(ref svg: Array<felt252>, data: @Data) {
    svg.append('<g id=\\"surface_details\\"> <t');
    svg.append('ext fill=\\"#D0D1D6\\" fill-opa');
    svg.append('city=\\"0.8\\" font-size=\\"10');
    svg.append('\\" font-weight=\\"500\\"> <tsp');
    svg.append('an x=\\"24\\" y=\\"315.636\\">S');
    svg.append('urface</tspan> </text> <text fi');
    svg.append('ll=\\"#EBECF0\\" font-size=\\"1');
    svg.append('4\\" font-weight=\\"bold\\"> <t');
    svg.append('span x=\\"24\\" y=\\"333.091\\"');
    svg.append('>');
    svg.concat(*data.asset_area);
    svg.append('m&#xb2;</tspan> </text> </g>');
}
#[inline(always)]
fn print_type_details(ref svg: Array<felt252>, data: @Data) {
    svg.append('<g id=\\"type_details\\"> <text');
    svg.append(' fill=\\"#D0D1D6\\" fill-opacit');
    svg.append('y=\\"0.8\\" font-size=\\"10\\"');
    svg.append(' font-weight=\\"500\\"> <tspan');
    svg.append(' x=\\"117\\" y=\\"315.636\\">Ty');
    svg.append('pe</tspan> </text> <text fill=');
    svg.append('\\"#EFECEA\\" font-size=\\"14\\');
    svg.append('" font-weight=\\"bold\\"> <tspa');
    svg.append('n x=\\"117\\" y=\\"333.091\\">');
    svg.concat(*data.project.type_);
    svg.append('</tspan> </text> </g>');
}

#[inline(always)]
fn print_head_details(ref svg: Array<felt252>, data: @Data) {
    svg.append('<g id=\\"details\\" letter-spac');
    svg.append('ing=\\"0em\\"> ');
    print_surface_details(ref svg, data);
    svg.append(' ');
    print_type_details(ref svg, data);
    svg.append(' </g>');
}

#[inline(always)]
fn print_sdg_details(ref svg: Array<felt252>, data: @Data) {
    svg.append('<g id=\\"sdg_details\\" letter-');
    svg.append('spacing=\\"0em\\"> <text fill=');
    svg.append('\\"#D0D1D6\\" fill-opacity=\\"0');
    svg.append('.8\\" font-size=\\"10\\" font-w');
    svg.append('eight=\\"500\\"> <tspan x=\\"23');
    svg.append('3\\" y=\\"315.636\\" text-ancho');
    svg.append('r=\\"end\\">Impact on</tspan> <');
    svg.append('/text> <text fill=\\"#EFECEA\\"');
    svg.append(' font-size=\\"14\\" font-weight');
    svg.append('=\\"bold\\"> <tspan x=\\"233\\"');
    svg.append(' y=\\"333.091\\" text-anchor=\\');
    svg.append('"end\\">');
    svg.concat(*data.sdg_count);
    svg.append(' SDG&#x2019;s</tspan> </text> <');
    svg.append('/g>');
}
#[inline(always)]
fn print_sdg_components(ref svg: Array<felt252>, data: @Data) {
    svg.append('<g id=\\"sdg_components\\"> ');
    svg.concat(*data.sdg_components);
    svg.append(' </g>');
}

#[inline(always)]
fn print_head_sdg(ref svg: Array<felt252>, data: @Data) {
    svg.append('<g id=\\"sdg\\"> ');
    print_sdg_details(ref svg, data);
    svg.append(' ');
    print_sdg_components(ref svg, data);
    svg.append(' </g>');
}


#[inline(always)]
fn print_head_bottom(ref svg: Array<felt252>, data: @Data) {
    svg.append('<g id=\\"bottom\\"> ');
    print_head_details(ref svg, data);
    svg.append(' ');
    print_head_sdg(ref svg, data);
    svg.append(' </g>');
}

#[inline(always)]
fn print_background_image(ref svg: Array<felt252>, data: @Data) {
    svg.append('<g id=\\"background_image\\" tr');
    svg.append('ansform=\\"matrix(-1 0 0 1 312');
    svg.append(' 3)\\"> <rect width=\\"308\\" h');
    svg.append('eight=\\"353\\" rx=\\"8\\" fill');
    svg.append('=\\"url(#pattern0)\\" /> <rect');
    svg.append(' width=\\"308\\" height=\\"353');
    svg.append('\\" rx=\\"8\\" fill=\\"url(#pai');
    svg.append('nt0_linear)\\" /> </g>');
}

#[inline(always)]
fn print_head_card_container(ref svg: Array<felt252>, data: @Data) {
    svg.append('<g id=\\"card_container\\" filt');
    svg.append('er=\\"url(#filter0_d)\\" clip-p');
    svg.append('ath=\\"url(#clip0)\\"> ');
    print_background_image(ref svg, data);
    svg.append(' ');
    print_head_card_content(ref svg, data);
    svg.append(' ');
    print_head_bottom(ref svg, data);
    svg.append(' </g>');
}


#[inline(always)]
fn print_head_card(ref svg: Array<felt252>, data: @Data) {
    svg.append('<g id=\\"card\\"> ');
    print_head_card_container(ref svg, data);
    svg.append(' </g>');
}

#[inline(always)]
fn print_column1(ref svg: Array<felt252>, data: @Data) {
    svg.append('<g id=\\"column1\\" letter-spac');
    svg.append('ing=\\"0em\\"> <text fill=\\"#E');
    svg.append('FECEA\\" font-size=\\"21\\" fon');
    svg.append('t-weight=\\"bold\\" letter-spac');
    svg.append('ing=\\"-0.03em\\"> <tspan x=\\"');
    svg.append('20\\" y=\\"176.136\\">');
    svg.concat(*data.project.name);
    svg.append('</tspan> </text> <text fill=\\"');
    svg.append('#D0D1D6\\" fill-opacity=\\"0.8');
    svg.append('\\" font-size=\\"10\\"> <tspan');
    svg.append(' x=\\"20.4258\\" y=\\"195.636\\');
    svg.append('">Based in </tspan> </text> <te');
    svg.append('xt fill=\\"#D0D1D6\\" font-size');
    svg.append('=\\"10\\" font-weight=\\"600\\"');
    svg.append('> <tspan x=\\"63.668\\" y=\\"19');
    svg.append('5.636\\">');
    svg.concat(*data.project.country);
    svg.append('</tspan> </text> <text fill=\\"');
    svg.append('#D0D1D6\\" fill-opacity=\\"0.8');
    svg.append('\\" font-size=\\"10\\"> <tspan');
    svg.append(' x=\\"20\\" y=\\"209.636\\">By');
    svg.append(' </tspan> </text> <text fill=\\');
    svg.append('"#D0D1D6\\" font-size=\\"10\\"');
    svg.append(' font-weight=\\"600\\"> <tspan');
    svg.append(' x=\\"34.8828\\" y=\\"209.636\\');
    svg.append('">');
    svg.concat(*data.project.developer);
    svg.append('</tspan> </text> </g>');
}
#[inline(always)]
fn print_column2(ref svg: Array<felt252>, data: @Data) {
    svg.append('<g id=\\"column2\\" letter-spac');
    svg.append('ing=\\"0em\\"> <text fill=\\"#D');
    svg.append('0D1D6\\" fill-opacity=\\"0.8\\"');
    svg.append(' font-size=\\"10\\"> <tspan x=');
    svg.append('\\"295\\" y=\\"195.636\\" text-');
    svg.append('anchor=\\"end\\">Certified by</');
    svg.append('tspan> </text> <text fill=\\"#E');
    svg.append('FECEA\\" font-size=\\"11\\" fon');
    svg.append('t-weight=\\"600\\"> <tspan x=\\');
    svg.append('"295\\" y=\\"209.5\\" text-anch');
    svg.append('or=\\"end\\">');
    svg.concat(*data.project.certifier);
    svg.append('</tspan> </text> </g>');
}
#[inline(always)]
fn print_card_border(ref svg: Array<felt252>, data: @Data) {
    svg.append('<g id=\\"card_border\\"> ');
    svg.concat(*data.border_component);
    svg.append(' </g>');
}

#[inline(always)]
fn print_head_main_info(ref svg: Array<felt252>, data: @Data) {
    svg.append('<g id=\\"main_info\\"> ');
    print_column1(ref svg, data);
    svg.append(' ');
    print_column2(ref svg, data);
    svg.append(' ');
    print_card_border(ref svg, data);
    svg.append(' </g>');
}

#[inline(always)]
fn print_status_component(ref svg: Array<felt252>, data: @Data) {
    svg.append('<g id=\\"status_component\\" fi');
    svg.append('lter=\\"url(#filter1_b)\\"> ');
    svg.concat(*data.status_component);
    svg.append(' </g>');
}

#[inline(always)]
fn print_head_sft(ref svg: Array<felt252>, data: @Data) {
    svg.append('<g id=\\"sft\\" style=\\"white-');
    svg.append('space: pre\\"> ');
    print_head_card(ref svg, data);
    svg.append(' ');
    print_status_component(ref svg, data);
    svg.append(' ');
    print_head_main_info(ref svg, data);
    svg.append(' ');
    svg.concat(*data.badge_component);
    svg.append(' </g>');
}

#[inline(always)]
fn print_filter0_d(ref svg: Array<felt252>, data: @Data) {
    svg.append('<filter id=\\"filter0_d\\" x=\\');
    svg.append('"3\\" y=\\"3\\" width=\\"310\\"');
    svg.append(' height=\\"354\\" filterUnits=');
    svg.append('\\"userSpaceOnUse\\" color-inte');
    svg.append('rpolation-filters=\\"sRGB\\"> <');
    svg.append('feFlood flood-opacity=\\"0\\" r');
    svg.append('esult=\\"BackgroundImageFix\\"');
    svg.append(' /> <feColorMatrix in=\\"Source');
    svg.append('Alpha\\" type=\\"matrix\\" valu');
    svg.append('es=\\"0 0 0 0 0 0 0 0 0 0 0 0 0');
    svg.append(' 0 0 0 0 0 127 0\\" result=\\"h');
    svg.append('ardAlpha\\" /> <feMorphology ra');
    svg.append('dius=\\"1\\" operator=\\"dilate');
    svg.append('\\" in=\\"SourceAlpha\\" result');
    svg.append('=\\"effect1_dropShadow\\" /> <f');
    svg.append('eOffset /> <feColorMatrix type=');
    svg.append('\\"matrix\\" values=\\"0 0 0 0');
    svg.append(' 0.321569 0 0 0 0 0.337255 0 0');
    svg.append(' 0 0 0.380392 0 0 0 0.4 0\\" />');
    svg.append(' <feBlend mode=\\"normal\\" in2');
    svg.append('=\\"BackgroundImageFix\\" resul');
    svg.append('t=\\"effect1_dropShadow\\" /> <');
    svg.append('feBlend mode=\\"normal\\" in=\\');
    svg.append('"SourceGraphic\\" in2=\\"effect');
    svg.append('1_dropShadow\\" result=\\"shape');
    svg.append('\\" /> </filter>');
}
#[inline(always)]
fn print_filter1_b(ref svg: Array<felt252>, data: @Data) {
    svg.append('<filter id=\\"filter1_b\\" x=\\');
    svg.append('"191\\" y=\\"0\\" width=\\"125');
    svg.append('\\" height=\\"62\\" filterUnits');
    svg.append('=\\"userSpaceOnUse\\" color-int');
    svg.append('erpolation-filters=\\"sRGB\\">');
    svg.append(' <feFlood flood-opacity=\\"0\\"');
    svg.append(' result=\\"BackgroundImageFix\\');
    svg.append('" /> <feGaussianBlur in=\\"Back');
    svg.append('groundImageFix\\" stdDeviation=');
    svg.append('\\"10\\" /> <feComposite in2=\\');
    svg.append('"SourceAlpha\\" operator=\\"in');
    svg.append('\\" result=\\"effect1_backgroun');
    svg.append('dBlur\\" /> <feBlend mode=\\"no');
    svg.append('rmal\\" in=\\"SourceGraphic\\"');
    svg.append(' in2=\\"effect1_backgroundBlur');
    svg.append('\\" result=\\"shape\\" /> </fil');
    svg.append('ter>');
}

#[inline(always)]
fn print_head_defs(ref svg: Array<felt252>, data: @Data) {
    svg.append('<defs id=\\"defs\\"> ');
    print_filter0_d(ref svg, data);
    svg.append(' <pattern id=\\"pattern0\\" pat');
    svg.append('ternContentUnits=\\"objectBound');
    svg.append('ingBox\\" width=\\"1\\" height=');
    svg.append('\\"1\\"> <use href=\\"#image0\\');
    svg.append('" transform=\\"matrix(0.0009440');
    svg.append('72 0 0 0.000823723 -0.365242 0)');
    svg.append('\\" /> </pattern> ');
    print_filter1_b(ref svg, data);
    svg.append(' <linearGradient id=\\"paint0_l');
    svg.append('inear\\" x1=\\"231\\" y1=\\"51.');
    svg.append('5\\" x2=\\"310.644\\" y2=\\"330');
    svg.append('.956\\" gradientUnits=\\"userSp');
    svg.append('aceOnUse\\"> <stop stop-color=');
    svg.append('\\"#0B0D13\\" stop-opacity=\\"0');
    svg.append('.3\\" /> <stop offset=\\"0.2937');
    svg.append('78\\" stop-color=\\"#0B0D13\\"');
    svg.append(' stop-opacity=\\"0.7006\\" /> <');
    svg.append('stop offset=\\"0.799813\\" stop');
    svg.append('-color=\\"#0B0D13\\" stop-opaci');
    svg.append('ty=\\"0.84\\" /> </linearGradie');
    svg.append('nt> <clipPath id=\\"clip0\\"> <');
    svg.append('rect x=\\"4\\" y=\\"4\\" width=');
    svg.append('\\"308\\" height=\\"352\\" rx=');
    svg.append('\\"12\\" fill=\\"white\\" /> </');
    svg.append('clipPath> <image id=\\"image0\\');
    svg.append('" width=\\"1833\\" height=\\"12');
    svg.append('14\\" href=\\"data:image/jpeg;b');
    svg.append('ase64,');
    svg.concat(*data.background_image);
    svg.append('\\" /> </defs>');
}


#[inline(always)]
fn print_head_sft_template(ref svg: Array<felt252>, data: @Data) {
    svg.append('<svg id=\\"sft_template\\" view');
    svg.append('Box=\\"0 0 316 360\\" fill=\\"n');
    svg.append('one\\" version=\\"1.1\\" xmlns=');
    svg.append('\\"http://www.w3.org/2000/svg\\');
    svg.append('"> <style> @import url(https://');
    svg.append('fonts.googleapis.com/css2?famil');
    svg.append('y=Inter:wght@400;500;600;700);');
    svg.append(' @import url(https://fonts.goog');
    svg.append('leapis.com/css2?family=Inter:wg');
    svg.append('ht@700&display=block&text=%E2%8');
    svg.append('8%9E); svg text { -webkit-user-');
    svg.append('select: none; -moz-user-select:');
    svg.append(' none; -ms-user-select: none; u');
    svg.append('ser-select: none; -webkit-tap-h');
    svg.append('ighlight-color: rgba(255, 255,');
    svg.append(' 255, 0); font-family: Inter; }');
    svg.append(' </style> ');
    print_head_sft(ref svg, data);
    svg.append(' ');
    print_head_defs(ref svg, data);
    svg.append('</svg>');
}
